from fastapi import FastAPI, UploadFile, File
from fastapi.middleware.cors import CORSMiddleware
import tempfile
import os
import shutil
from extract import extract_features
from malware_model import knn_classifier

app = FastAPI()

app.add_middleware(
    CORSMiddleware,
    allow_origins=["http://localhost:5173"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

@app.post("/upload")
async def upload_file(file: UploadFile = File(...)): 
    # create a temporary file
    with tempfile.NamedTemporaryFile(delete=False) as tmp:
        shutil.copyfileobj(file.file, tmp)
        tmp_path = tmp.name

    # analyze features
    features = extract_features(tmp_path)
    analysis = knn_classifier(features)

    print("features: ", features)

    # remove the temporary file after use
    os.remove(tmp_path)

    return{"result": "malicious"} if analysis == 1 else {"result": "benign"}

